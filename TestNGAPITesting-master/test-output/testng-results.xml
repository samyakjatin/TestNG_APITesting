<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="74" total="218" passed="113" failed="31" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-21T17:05:40 IST" name="Suite" finished-at="2025-01-21T17:06:08 IST" duration-ms="28278">
    <groups>
    </groups>
    <test started-at="2025-01-21T17:05:40 IST" name="admin" finished-at="2025-01-21T17:06:08 IST" duration-ms="28278">
      <class name="admin.ReservationTransactionController">
        <test-method signature="test01PostCreateReservation()[pri:0, instance:admin.ReservationTransactionController@24269709]" started-at="2025-01-21T17:05:50 IST" name="test01PostCreateReservation" finished-at="2025-01-21T17:05:50 IST" duration-ms="131" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK or 201 Created, but got: 500 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK or 201 Created, but got: 500 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.ReservationTransactionController.test01PostCreateReservation(ReservationTransactionController.java:80)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01PostCreateReservation -->
        <test-method signature="test03GetReservationAuctionIdUserId()[pri:0, instance:admin.ReservationTransactionController@24269709]" started-at="2025-01-21T17:05:50 IST" name="test03GetReservationAuctionIdUserId" finished-at="2025-01-21T17:05:50 IST" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03GetReservationAuctionIdUserId -->
        <test-method signature="test04GetReservationAll()[pri:0, instance:admin.ReservationTransactionController@24269709]" started-at="2025-01-21T17:05:50 IST" name="test04GetReservationAll" finished-at="2025-01-21T17:05:50 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04GetReservationAll -->
      </class> <!-- admin.ReservationTransactionController -->
      <class name="admin.BalanceSheetController">
        <test-method signature="Test01BalanceSheet()[pri:0, instance:admin.BalanceSheetController@24aed80c]" started-at="2025-01-21T17:05:50 IST" name="Test01BalanceSheet" finished-at="2025-01-21T17:05:52 IST" duration-ms="1064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test01BalanceSheet -->
      </class> <!-- admin.BalanceSheetController -->
      <class name="admin.ClarityController">
        <test-method signature="test01PutClarityId()[pri:0, instance:admin.ClarityController@752325ad]" started-at="2025-01-21T17:05:52 IST" name="test01PutClarityId" finished-at="2025-01-21T17:05:52 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01PutClarityId -->
        <test-method signature="test02PostClarity()[pri:0, instance:admin.ClarityController@752325ad]" started-at="2025-01-21T17:05:52 IST" name="test02PostClarity" finished-at="2025-01-21T17:05:52 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02PostClarity -->
        <test-method signature="test03PostClarityExcel()[pri:0, instance:admin.ClarityController@752325ad]" started-at="2025-01-21T17:05:52 IST" name="test03PostClarityExcel" finished-at="2025-01-21T17:05:52 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03PostClarityExcel -->
        <test-method signature="test04GetClarities()[pri:0, instance:admin.ClarityController@752325ad]" started-at="2025-01-21T17:05:52 IST" name="test04GetClarities" finished-at="2025-01-21T17:05:52 IST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04GetClarities -->
      </class> <!-- admin.ClarityController -->
      <class name="admin.RemarkController">
        <test-method signature="Test01Postremark()[pri:0, instance:admin.RemarkController@6ad82709]" started-at="2025-01-21T17:06:04 IST" name="Test01Postremark" finished-at="2025-01-21T17:06:04 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test01Postremark -->
        <test-method signature="Test03RemarkCount()[pri:0, instance:admin.RemarkController@6ad82709]" started-at="2025-01-21T17:06:04 IST" name="Test03RemarkCount" finished-at="2025-01-21T17:06:04 IST" duration-ms="28" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK or 204 No Content, but got: 500 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK or 204 No Content, but got: 500 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.RemarkController.Test03RemarkCount(RemarkController.java:174)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test03RemarkCount -->
      </class> <!-- admin.RemarkController -->
      <class name="admin.PolishController">
        <test-method signature="test01PolishPolishId()[pri:0, instance:admin.PolishController@7a8c8dcf]" started-at="2025-01-21T17:05:50 IST" name="test01PolishPolishId" finished-at="2025-01-21T17:05:50 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01PolishPolishId -->
        <test-method signature="test02Polish()[pri:0, instance:admin.PolishController@7a8c8dcf]" started-at="2025-01-21T17:05:50 IST" name="test02Polish" finished-at="2025-01-21T17:05:50 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02Polish -->
        <test-method signature="test03PolishExcel()[pri:0, instance:admin.PolishController@7a8c8dcf]" started-at="2025-01-21T17:05:50 IST" name="test03PolishExcel" finished-at="2025-01-21T17:05:50 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03PolishExcel -->
        <test-method signature="test04Polishes()[pri:0, instance:admin.PolishController@7a8c8dcf]" started-at="2025-01-21T17:05:50 IST" name="test04Polishes" finished-at="2025-01-21T17:05:50 IST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04Polishes -->
      </class> <!-- admin.PolishController -->
      <class name="admin.SymmetryController">
        <test-method signature="test01SymmetryId()[pri:0, instance:admin.SymmetryController@2aceadd4]" started-at="2025-01-21T17:05:50 IST" name="test01SymmetryId" finished-at="2025-01-21T17:05:50 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01SymmetryId -->
        <test-method signature="test02Symmetry()[pri:0, instance:admin.SymmetryController@2aceadd4]" started-at="2025-01-21T17:05:50 IST" name="test02Symmetry" finished-at="2025-01-21T17:05:50 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02Symmetry -->
        <test-method signature="test03SymmetryExcel()[pri:0, instance:admin.SymmetryController@2aceadd4]" started-at="2025-01-21T17:05:50 IST" name="test03SymmetryExcel" finished-at="2025-01-21T17:05:50 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03SymmetryExcel -->
        <test-method signature="test04Symmetries()[pri:0, instance:admin.SymmetryController@2aceadd4]" started-at="2025-01-21T17:05:50 IST" name="test04Symmetries" finished-at="2025-01-21T17:05:50 IST" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04Symmetries -->
      </class> <!-- admin.SymmetryController -->
      <class name="admin.MailInvoiceLotDiamondController">
        <test-method signature="Test01PostSendmails()[pri:0, instance:admin.MailInvoiceLotDiamondController@1ff4931d]" started-at="2025-01-21T17:05:56 IST" name="Test01PostSendmails" finished-at="2025-01-21T17:05:56 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test01PostSendmails -->
        <test-method signature="Test02PostSendmailEmailIdAuctionID()[pri:0, instance:admin.MailInvoiceLotDiamondController@1ff4931d]" started-at="2025-01-21T17:05:56 IST" name="Test02PostSendmailEmailIdAuctionID" finished-at="2025-01-21T17:05:56 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test02PostSendmailEmailIdAuctionID -->
        <test-method signature="Test03PostSendMailsAllLots()[pri:0, instance:admin.MailInvoiceLotDiamondController@1ff4931d]" started-at="2025-01-21T17:05:56 IST" name="Test03PostSendMailsAllLots" finished-at="2025-01-21T17:05:56 IST" duration-ms="349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test03PostSendMailsAllLots -->
      </class> <!-- admin.MailInvoiceLotDiamondController -->
      <class name="admin.LotDiamondController">
        <test-method signature="Test01LotActiveAll()[pri:0, instance:admin.LotDiamondController@710f4dc7]" started-at="2025-01-21T17:05:55 IST" name="Test01LotActiveAll" finished-at="2025-01-21T17:05:55 IST" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test01LotActiveAll -->
        <test-method signature="Test03LotDiamondAuctionId()[pri:0, instance:admin.LotDiamondController@710f4dc7]" started-at="2025-01-21T17:05:55 IST" name="Test03LotDiamondAuctionId" finished-at="2025-01-21T17:05:55 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test03LotDiamondAuctionId -->
        <test-method signature="Test05LotDiamonds()[pri:0, instance:admin.LotDiamondController@710f4dc7]" started-at="2025-01-21T17:05:55 IST" name="Test05LotDiamonds" finished-at="2025-01-21T17:05:55 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test05LotDiamonds -->
        <test-method signature="Test07LotDiamondsAuctionId()[pri:0, instance:admin.LotDiamondController@710f4dc7]" started-at="2025-01-21T17:05:55 IST" name="Test07LotDiamondsAuctionId" finished-at="2025-01-21T17:05:56 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test07LotDiamondsAuctionId -->
        <test-method signature="Test08LotDIamondssupplierLots()[pri:0, instance:admin.LotDiamondController@710f4dc7]" started-at="2025-01-21T17:05:56 IST" name="Test08LotDIamondssupplierLots" finished-at="2025-01-21T17:05:56 IST" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test08LotDIamondssupplierLots -->
        <test-method signature="Test09otDiamondsPrevious()[pri:0, instance:admin.LotDiamondController@710f4dc7]" started-at="2025-01-21T17:05:56 IST" name="Test09otDiamondsPrevious" finished-at="2025-01-21T17:05:56 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test09otDiamondsPrevious -->
      </class> <!-- admin.LotDiamondController -->
      <class name="admin.DatabaseBackupController">
        <test-method signature="test01PostStart()[pri:0, instance:admin.DatabaseBackupController@3d285d7e]" started-at="2025-01-21T17:05:46 IST" name="test01PostStart" finished-at="2025-01-21T17:05:46 IST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01PostStart -->
        <test-method signature="test02GetStatus()[pri:0, instance:admin.DatabaseBackupController@3d285d7e]" started-at="2025-01-21T17:05:46 IST" name="test02GetStatus" finished-at="2025-01-21T17:05:46 IST" duration-ms="32" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK, but got: 500 expected [200] but found [500]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK, but got: 500 expected [200] but found [500]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at admin.DatabaseBackupController.test02GetStatus(DatabaseBackupController.java:115)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02GetStatus -->
        <test-method signature="test03GetBackupurl()[pri:0, instance:admin.DatabaseBackupController@3d285d7e]" started-at="2025-01-21T17:05:46 IST" name="test03GetBackupurl" finished-at="2025-01-21T17:05:47 IST" duration-ms="663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03GetBackupurl -->
      </class> <!-- admin.DatabaseBackupController -->
      <class name="admin.RefreshTokencontroller">
        <test-method signature="Test01GetAuthRefreshToken()[pri:0, instance:admin.RefreshTokencontroller@61322f9d]" started-at="2025-01-21T17:06:04 IST" name="Test01GetAuthRefreshToken" finished-at="2025-01-21T17:06:04 IST" duration-ms="31" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK or 201 Created, but got: 409 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK or 201 Created, but got: 409 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.RefreshTokencontroller.Test01GetAuthRefreshToken(RefreshTokencontroller.java:53)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test01GetAuthRefreshToken -->
      </class> <!-- admin.RefreshTokencontroller -->
      <class name="admin.UserController">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:admin.UserController@1a677343]" started-at="2025-01-21T17:05:38 IST" name="beforeSuite" finished-at="2025-01-21T17:05:40 IST" duration-ms="2506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method signature="test01GetUserDetails()[pri:0, instance:admin.UserController@1a677343]" started-at="2025-01-21T17:05:40 IST" name="test01GetUserDetails" description="/api/v1/user/{userId}" finished-at="2025-01-21T17:05:40 IST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01GetUserDetails -->
        <test-method signature="test07GetKycByUserId()[pri:0, instance:admin.UserController@1a677343]" started-at="2025-01-21T17:05:40 IST" name="test07GetKycByUserId" finished-at="2025-01-21T17:05:40 IST" duration-ms="74" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Request failed due to token expiration.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Request failed due to token expiration.
at org.testng.Assert.fail(Assert.java:99)
at admin.UserController.test07GetKycByUserId(UserController.java:197)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test07GetKycByUserId -->
        <test-method signature="test08GetSupplierDetailsByAuctionId()[pri:0, instance:admin.UserController@1a677343]" started-at="2025-01-21T17:05:40 IST" name="test08GetSupplierDetailsByAuctionId" finished-at="2025-01-21T17:05:41 IST" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test08GetSupplierDetailsByAuctionId -->
        <test-method signature="test09GetAppliedUsersKyc()[pri:0, instance:admin.UserController@1a677343]" started-at="2025-01-21T17:05:41 IST" name="test09GetAppliedUsersKyc" finished-at="2025-01-21T17:05:41 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test09GetAppliedUsersKyc -->
        <test-method signature="test10GetInactiveUsers()[pri:0, instance:admin.UserController@1a677343]" started-at="2025-01-21T17:05:41 IST" name="test10GetInactiveUsers" finished-at="2025-01-21T17:05:41 IST" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test10GetInactiveUsers -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:admin.UserController@1a677343]" started-at="2025-01-21T17:06:09 IST" name="afterSuite" finished-at="2025-01-21T17:06:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- admin.UserController -->
      <class name="admin.rapaportController">
        <test-method signature="Test01LotDiamondrapPrice()[pri:0, instance:admin.rapaportController@65e98b1c]" started-at="2025-01-21T17:05:56 IST" name="Test01LotDiamondrapPrice" finished-at="2025-01-21T17:05:56 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test01LotDiamondrapPrice -->
        <test-method signature="Test02rapaports()[pri:0, instance:admin.rapaportController@65e98b1c]" started-at="2025-01-21T17:05:56 IST" name="Test02rapaports" finished-at="2025-01-21T17:06:04 IST" duration-ms="8259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test02rapaports -->
      </class> <!-- admin.rapaportController -->
      <class name="admin.BidController">
        <test-method signature="Test01PutBidUpdate()[pri:0, instance:admin.BidController@3a52dba3]" started-at="2025-01-21T17:05:52 IST" name="Test01PutBidUpdate" finished-at="2025-01-21T17:05:52 IST" duration-ms="7" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid number of path parameters. Expected 2, was 0. Undefined path parameters are: proxyBidId, proxyBidAmount.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid number of path parameters. Expected 2, was 0. Undefined path parameters are: proxyBidId, proxyBidAmount.
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1277)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1161)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy:180)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy)
at admin.BidController.Test01PutBidUpdate(BidController.java:48)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test01PutBidUpdate -->
        <test-method signature="Test02PutBidUpdateJewellery()[pri:0, instance:admin.BidController@3a52dba3]" started-at="2025-01-21T17:05:52 IST" name="Test02PutBidUpdateJewellery" finished-at="2025-01-21T17:05:52 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test02PutBidUpdateJewellery -->
        <test-method signature="Test03PostMakeWinners()[pri:0, instance:admin.BidController@3a52dba3]" started-at="2025-01-21T17:05:52 IST" name="Test03PostMakeWinners" finished-at="2025-01-21T17:05:52 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test03PostMakeWinners -->
        <test-method signature="Test04GetBiddersInfo()[pri:0, instance:admin.BidController@3a52dba3]" started-at="2025-01-21T17:05:52 IST" name="Test04GetBiddersInfo" finished-at="2025-01-21T17:05:52 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test04GetBiddersInfo -->
        <test-method signature="Test06GetBidCount()[pri:0, instance:admin.BidController@3a52dba3]" started-at="2025-01-21T17:05:52 IST" name="Test06GetBidCount" finished-at="2025-01-21T17:05:52 IST" duration-ms="26" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Request failed due to token expiration.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Request failed due to token expiration.
at org.testng.Assert.fail(Assert.java:99)
at admin.BidController.Test06GetBidCount(BidController.java:276)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test06GetBidCount -->
        <test-method signature="Test08GetMyBid()[pri:0, instance:admin.BidController@3a52dba3]" started-at="2025-01-21T17:05:52 IST" name="Test08GetMyBid" finished-at="2025-01-21T17:05:52 IST" duration-ms="28" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Request failed due to token expiration.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Request failed due to token expiration.
at org.testng.Assert.fail(Assert.java:99)
at admin.BidController.Test08GetMyBid(BidController.java:334)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test08GetMyBid -->
        <test-method signature="Test09GetLoseCount()[pri:0, instance:admin.BidController@3a52dba3]" started-at="2025-01-21T17:05:52 IST" name="Test09GetLoseCount" finished-at="2025-01-21T17:05:52 IST" duration-ms="26" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Request failed due to token expiration.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Request failed due to token expiration.
at org.testng.Assert.fail(Assert.java:99)
at admin.BidController.Test09GetLoseCount(BidController.java:392)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test09GetLoseCount -->
        <test-method signature="Test11GetAllCounts()[pri:0, instance:admin.BidController@3a52dba3]" started-at="2025-01-21T17:05:52 IST" name="Test11GetAllCounts" finished-at="2025-01-21T17:05:52 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test11GetAllCounts -->
        <test-method signature="Test12GetBidHistory()[pri:0, instance:admin.BidController@3a52dba3]" started-at="2025-01-21T17:05:52 IST" name="Test12GetBidHistory" finished-at="2025-01-21T17:05:52 IST" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test12GetBidHistory -->
        <test-method signature="Test13GetBidDelete()[pri:0, instance:admin.BidController@3a52dba3]" started-at="2025-01-21T17:05:52 IST" name="Test13GetBidDelete" finished-at="2025-01-21T17:05:52 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test13GetBidDelete -->
      </class> <!-- admin.BidController -->
      <class name="admin.LedgerController">
        <test-method signature="test01LedgerLedgerId()[pri:0, instance:admin.LedgerController@fbd1f6]" started-at="2025-01-21T17:05:49 IST" name="test01LedgerLedgerId" finished-at="2025-01-21T17:05:49 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01LedgerLedgerId -->
        <test-method signature="test02Ledger()[pri:0, instance:admin.LedgerController@fbd1f6]" started-at="2025-01-21T17:05:49 IST" name="test02Ledger" finished-at="2025-01-21T17:05:49 IST" duration-ms="30" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK or 201 Created, but got: 409 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK or 201 Created, but got: 409 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.LedgerController.test02Ledger(LedgerController.java:136)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02Ledger -->
        <test-method signature="test03Ledgers()[pri:0, instance:admin.LedgerController@fbd1f6]" started-at="2025-01-21T17:05:49 IST" name="test03Ledgers" finished-at="2025-01-21T17:05:49 IST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03Ledgers -->
      </class> <!-- admin.LedgerController -->
      <class name="admin.FilterController">
        <test-method signature="test01GetFilter()[pri:0, instance:admin.FilterController@40005471]" started-at="2025-01-21T17:05:47 IST" name="test01GetFilter" finished-at="2025-01-21T17:05:48 IST" duration-ms="798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01GetFilter -->
      </class> <!-- admin.FilterController -->
      <class name="admin.InvoiceDetailsController">
        <test-method signature="test01UserIdAuctionId()[pri:0, instance:admin.InvoiceDetailsController@ba2f4ec]" started-at="2025-01-21T17:05:48 IST" name="test01UserIdAuctionId" finished-at="2025-01-21T17:05:48 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01UserIdAuctionId -->
        <test-method signature="test02InvoiceDetails()[pri:0, instance:admin.InvoiceDetailsController@ba2f4ec]" started-at="2025-01-21T17:05:48 IST" name="test02InvoiceDetails" finished-at="2025-01-21T17:05:48 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02InvoiceDetails -->
        <test-method signature="test03InvoiceDetailsAllAuctionId()[pri:0, instance:admin.InvoiceDetailsController@ba2f4ec]" started-at="2025-01-21T17:05:48 IST" name="test03InvoiceDetailsAllAuctionId" finished-at="2025-01-21T17:05:48 IST" duration-ms="261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03InvoiceDetailsAllAuctionId -->
        <test-method signature="test04InvoiceDetailUserIdAuctionId()[pri:0, instance:admin.InvoiceDetailsController@ba2f4ec]" started-at="2025-01-21T17:05:48 IST" name="test04InvoiceDetailUserIdAuctionId" finished-at="2025-01-21T17:05:48 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04InvoiceDetailUserIdAuctionId -->
        <test-method signature="test05invoideDetailsAll()[pri:0, instance:admin.InvoiceDetailsController@ba2f4ec]" started-at="2025-01-21T17:05:48 IST" name="test05invoideDetailsAll" finished-at="2025-01-21T17:05:48 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test05invoideDetailsAll -->
      </class> <!-- admin.InvoiceDetailsController -->
      <class name="admin.AuthenticationController">
        <test-method signature="test01AuthRegister()[pri:0, instance:admin.AuthenticationController@4b2bac3f]" started-at="2025-01-21T17:05:42 IST" name="test01AuthRegister" finished-at="2025-01-21T17:05:42 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01AuthRegister -->
        <test-method signature="test02AuthRegisterAll()[pri:0, instance:admin.AuthenticationController@4b2bac3f]" started-at="2025-01-21T17:05:42 IST" name="test02AuthRegisterAll" finished-at="2025-01-21T17:05:42 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02AuthRegisterAll -->
      </class> <!-- admin.AuthenticationController -->
      <class name="admin.LabController">
        <test-method signature="Test01LabLabId()[pri:0, instance:admin.LabController@45c7e403]" started-at="2025-01-21T17:05:55 IST" name="Test01LabLabId" finished-at="2025-01-21T17:05:55 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test01LabLabId -->
        <test-method signature="Test02Lab()[pri:0, instance:admin.LabController@45c7e403]" started-at="2025-01-21T17:05:55 IST" name="Test02Lab" finished-at="2025-01-21T17:05:55 IST" duration-ms="26" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK or 201 Created, but got: 409 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK or 201 Created, but got: 409 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.LabController.Test02Lab(LabController.java:133)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test02Lab -->
        <test-method signature="Test03LabExcel()[pri:0, instance:admin.LabController@45c7e403]" started-at="2025-01-21T17:05:55 IST" name="Test03LabExcel" finished-at="2025-01-21T17:05:55 IST" duration-ms="10" status="FAIL">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[C:\WorkSpaces\Swastik2425_Workspace\Postsample (The system cannot find the path specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: C:\WorkSpaces\Swastik2425_Workspace\Postsample (The system cannot find the path specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:219)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:159)
at org.apache.http.entity.mime.content.FileBody.writeTo(FileBody.java:116)
at org.apache.http.entity.mime.AbstractMultipartForm.doWriteTo(AbstractMultipartForm.java:134)
at org.apache.http.entity.mime.AbstractMultipartForm.writeTo(AbstractMultipartForm.java:157)
at org.apache.http.entity.mime.MultipartFormEntity.writeTo(MultipartFormEntity.java:113)
at org.apache.http.HttpEntity$writeTo$4.call(Unknown Source)
at io.restassured.internal.multipart.RestAssuredMultiPartEntity.writeTo(RestAssuredMultiPartEntity.groovy:110)
at org.apache.http.entity.HttpEntityWrapper.writeTo(HttpEntityWrapper.java:96)
at org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper.writeTo(EntityEnclosingRequestWrapper.java:110)
at org.apache.http.impl.entity.EntitySerializer.serialize(EntitySerializer.java:118)
at org.apache.http.impl.AbstractHttpClientConnection.sendRequestEntity(AbstractHttpClientConnection.java:274)
at org.apache.http.impl.conn.ManagedClientConnectionImpl.sendRequestEntity(ManagedClientConnectionImpl.java:214)
at org.apache.http.protocol.HttpRequestExecutor.doSendRequest(HttpRequestExecutor.java:238)
at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)
at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:679)
at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:481)
at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
at io.restassured.internal.RestAssuredHttpBuilder.doRequest(RestAssuredHttpBuilder.java:141)
at io.restassured.internal.http.HTTPBuilder.post(HTTPBuilder.java:349)
at io.restassured.internal.http.HTTPBuilder$post$2.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1209)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
at admin.LabController.Test03LabExcel(LabController.java:159)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test03LabExcel -->
        <test-method signature="Test04Labs()[pri:0, instance:admin.LabController@45c7e403]" started-at="2025-01-21T17:05:55 IST" name="Test04Labs" finished-at="2025-01-21T17:05:55 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test04Labs -->
      </class> <!-- admin.LabController -->
      <class name="admin.ColorController">
        <test-method signature="Test01PutColorId()[pri:0, instance:admin.ColorController@279fedbd]" started-at="2025-01-21T17:05:52 IST" name="Test01PutColorId" finished-at="2025-01-21T17:05:52 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test01PutColorId -->
        <test-method signature="Test02PostColor()[pri:0, instance:admin.ColorController@279fedbd]" started-at="2025-01-21T17:05:52 IST" name="Test02PostColor" finished-at="2025-01-21T17:05:53 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test02PostColor -->
        <test-method signature="Test03PostColorExcel()[pri:0, instance:admin.ColorController@279fedbd]" started-at="2025-01-21T17:05:53 IST" name="Test03PostColorExcel" finished-at="2025-01-21T17:05:53 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test03PostColorExcel -->
        <test-method signature="Test04GetColors()[pri:0, instance:admin.ColorController@279fedbd]" started-at="2025-01-21T17:05:53 IST" name="Test04GetColors" finished-at="2025-01-21T17:05:53 IST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test04GetColors -->
      </class> <!-- admin.ColorController -->
      <class name="admin.FluoresceneController">
        <test-method signature="test01PutFluoresceneID()[pri:0, instance:admin.FluoresceneController@2cd76f31]" started-at="2025-01-21T17:05:48 IST" name="test01PutFluoresceneID" finished-at="2025-01-21T17:05:48 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01PutFluoresceneID -->
        <test-method signature="test02PostFluorescene()[pri:0, instance:admin.FluoresceneController@2cd76f31]" started-at="2025-01-21T17:05:48 IST" name="test02PostFluorescene" finished-at="2025-01-21T17:05:48 IST" duration-ms="30" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK or 201 Created, but got: 409 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK or 201 Created, but got: 409 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.FluoresceneController.test02PostFluorescene(FluoresceneController.java:131)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02PostFluorescene -->
        <test-method signature="test04GetFluorescenes()[pri:0, instance:admin.FluoresceneController@2cd76f31]" started-at="2025-01-21T17:05:48 IST" name="test04GetFluorescenes" finished-at="2025-01-21T17:05:48 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04GetFluorescenes -->
        <test-method signature="tset03PostFluoresceneExcel()[pri:0, instance:admin.FluoresceneController@2cd76f31]" started-at="2025-01-21T17:05:48 IST" name="tset03PostFluoresceneExcel" finished-at="2025-01-21T17:05:48 IST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tset03PostFluoresceneExcel -->
      </class> <!-- admin.FluoresceneController -->
      <class name="admin.CountryController">
        <test-method signature="test01GetCountryId()[pri:0, instance:admin.CountryController@26794848]" started-at="2025-01-21T17:05:45 IST" name="test01GetCountryId" finished-at="2025-01-21T17:05:45 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01GetCountryId -->
        <test-method signature="test02PutCountryId()[pri:0, instance:admin.CountryController@26794848]" started-at="2025-01-21T17:05:45 IST" name="test02PutCountryId" finished-at="2025-01-21T17:05:45 IST" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02PutCountryId -->
        <test-method signature="test03PostCountry()[pri:0, instance:admin.CountryController@26794848]" started-at="2025-01-21T17:05:45 IST" name="test03PostCountry" finished-at="2025-01-21T17:05:45 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03PostCountry -->
        <test-method signature="test04GetCountries()[pri:0, instance:admin.CountryController@26794848]" started-at="2025-01-21T17:05:45 IST" name="test04GetCountries" finished-at="2025-01-21T17:05:45 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04GetCountries -->
      </class> <!-- admin.CountryController -->
      <class name="admin.ImageController">
        <test-method signature="Test01GetTopbarLogo()[pri:0, instance:admin.ImageController@b3ca52e]" started-at="2025-01-21T17:05:53 IST" name="Test01GetTopbarLogo" finished-at="2025-01-21T17:05:53 IST" duration-ms="681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test01GetTopbarLogo -->
        <test-method signature="Test02GetImages()[pri:0, instance:admin.ImageController@b3ca52e]" started-at="2025-01-21T17:05:53 IST" name="Test02GetImages" finished-at="2025-01-21T17:05:54 IST" duration-ms="794" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK, but got: 404 expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK, but got: 404 expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at admin.ImageController.Test02GetImages(ImageController.java:116)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test02GetImages -->
        <test-method signature="Test03GetFetchImages()[pri:0, instance:admin.ImageController@b3ca52e]" started-at="2025-01-21T17:05:54 IST" name="Test03GetFetchImages" finished-at="2025-01-21T17:05:55 IST" duration-ms="456" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK, but got: 404 expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK, but got: 404 expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at admin.ImageController.Test03GetFetchImages(ImageController.java:169)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test03GetFetchImages -->
        <test-method signature="Test04GetBulkBidThumbnailLogo()[pri:0, instance:admin.ImageController@b3ca52e]" started-at="2025-01-21T17:05:55 IST" name="Test04GetBulkBidThumbnailLogo" finished-at="2025-01-21T17:05:55 IST" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test04GetBulkBidThumbnailLogo -->
      </class> <!-- admin.ImageController -->
      <class name="admin.BrandController">
        <test-method signature="test01PutBrand()[pri:0, instance:admin.BrandController@2a5c8d3f]" started-at="2025-01-21T17:05:52 IST" name="test01PutBrand" finished-at="2025-01-21T17:05:52 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01PutBrand -->
        <test-method signature="test02GetBrand()[pri:0, instance:admin.BrandController@2a5c8d3f]" started-at="2025-01-21T17:05:52 IST" name="test02GetBrand" finished-at="2025-01-21T17:05:52 IST" duration-ms="80" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02GetBrand -->
        <test-method signature="test03PostBrand()[pri:0, instance:admin.BrandController@2a5c8d3f]" started-at="2025-01-21T17:05:52 IST" name="test03PostBrand" finished-at="2025-01-21T17:05:52 IST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03PostBrand -->
        <test-method signature="test04PostBrandExcel()[pri:0, instance:admin.BrandController@2a5c8d3f]" started-at="2025-01-21T17:05:52 IST" name="test04PostBrandExcel" finished-at="2025-01-21T17:05:52 IST" duration-ms="12" status="FAIL">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[C:\Users\ESAMYAK121\Desktop\Testing\.xlsx (The system cannot find the file specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: C:\Users\ESAMYAK121\Desktop\Testing\.xlsx (The system cannot find the file specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:219)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:159)
at org.apache.http.entity.mime.content.FileBody.writeTo(FileBody.java:116)
at org.apache.http.entity.mime.AbstractMultipartForm.doWriteTo(AbstractMultipartForm.java:134)
at org.apache.http.entity.mime.AbstractMultipartForm.writeTo(AbstractMultipartForm.java:157)
at org.apache.http.entity.mime.MultipartFormEntity.writeTo(MultipartFormEntity.java:113)
at org.apache.http.HttpEntity$writeTo$4.call(Unknown Source)
at io.restassured.internal.multipart.RestAssuredMultiPartEntity.writeTo(RestAssuredMultiPartEntity.groovy:110)
at org.apache.http.entity.HttpEntityWrapper.writeTo(HttpEntityWrapper.java:96)
at org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper.writeTo(EntityEnclosingRequestWrapper.java:110)
at org.apache.http.impl.entity.EntitySerializer.serialize(EntitySerializer.java:118)
at org.apache.http.impl.AbstractHttpClientConnection.sendRequestEntity(AbstractHttpClientConnection.java:274)
at org.apache.http.impl.conn.ManagedClientConnectionImpl.sendRequestEntity(ManagedClientConnectionImpl.java:214)
at org.apache.http.protocol.HttpRequestExecutor.doSendRequest(HttpRequestExecutor.java:238)
at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)
at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:679)
at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:481)
at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
at io.restassured.internal.RestAssuredHttpBuilder.doRequest(RestAssuredHttpBuilder.java:141)
at io.restassured.internal.http.HTTPBuilder.post(HTTPBuilder.java:349)
at io.restassured.internal.http.HTTPBuilder$post$2.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1209)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
at admin.BrandController.test04PostBrandExcel(BrandController.java:216)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04PostBrandExcel -->
        <test-method signature="test05GetBrands()[pri:0, instance:admin.BrandController@2a5c8d3f]" started-at="2025-01-21T17:05:52 IST" name="test05GetBrands" finished-at="2025-01-21T17:05:52 IST" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test05GetBrands -->
      </class> <!-- admin.BrandController -->
      <class name="admin.ForgotPasswordController">
        <test-method signature="test01AuthResetPassword()[pri:0, instance:admin.ForgotPasswordController@367ffa75]" started-at="2025-01-21T17:05:48 IST" name="test01AuthResetPassword" finished-at="2025-01-21T17:05:48 IST" duration-ms="44" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK or 201 Created, but got: 400 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK or 201 Created, but got: 400 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.ForgotPasswordController.test01AuthResetPassword(ForgotPasswordController.java:69)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01AuthResetPassword -->
        <test-method signature="test02AuthForgotPassword()[pri:0, instance:admin.ForgotPasswordController@367ffa75]" started-at="2025-01-21T17:05:48 IST" name="test02AuthForgotPassword" finished-at="2025-01-21T17:05:48 IST" duration-ms="52" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK or 201 Created, but got: 400 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK or 201 Created, but got: 400 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.ForgotPasswordController.test02AuthForgotPassword(ForgotPasswordController.java:121)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02AuthForgotPassword -->
      </class> <!-- admin.ForgotPasswordController -->
      <class name="admin.UserControllerMerged">
        <test-method signature="Test01GetUserSummary()[pri:0, instance:admin.UserControllerMerged@8297b3a]" started-at="2025-01-21T17:06:05 IST" name="Test01GetUserSummary" finished-at="2025-01-21T17:06:07 IST" duration-ms="1939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test01GetUserSummary -->
        <test-method signature="Test02GetUserRole()[pri:0, instance:admin.UserControllerMerged@8297b3a]" started-at="2025-01-21T17:06:07 IST" name="Test02GetUserRole" finished-at="2025-01-21T17:06:07 IST" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test02GetUserRole -->
        <test-method signature="Test03GetUserAccountSummary()[pri:0, instance:admin.UserControllerMerged@8297b3a]" started-at="2025-01-21T17:06:07 IST" name="Test03GetUserAccountSummary" finished-at="2025-01-21T17:06:08 IST" duration-ms="1548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test03GetUserAccountSummary -->
      </class> <!-- admin.UserControllerMerged -->
      <class name="admin.AuctionController">
        <test-method signature="test01PutAuctionId()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:41 IST" name="test01PutAuctionId" finished-at="2025-01-21T17:05:41 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01PutAuctionId -->
        <test-method signature="test02DeleteAuctionId()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:41 IST" name="test02DeleteAuctionId" finished-at="2025-01-21T17:05:41 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02DeleteAuctionId -->
        <test-method signature="test03PostAuction()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:41 IST" name="test03PostAuction" finished-at="2025-01-21T17:05:41 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03PostAuction -->
        <test-method signature="test04PostAuctionSupplierUpdateEmails()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:41 IST" name="test04PostAuctionSupplierUpdateEmails" finished-at="2025-01-21T17:05:41 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04PostAuctionSupplierUpdateEmails -->
        <test-method signature="test05PostAuctionSentEmails()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:41 IST" name="test05PostAuctionSentEmails" finished-at="2025-01-21T17:05:41 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test05PostAuctionSentEmails -->
        <test-method signature="test06GetAuctions()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:41 IST" name="test06GetAuctions" finished-at="2025-01-21T17:05:42 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test06GetAuctions -->
        <test-method signature="test07GetAuctionView()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:42 IST" name="test07GetAuctionView" finished-at="2025-01-21T17:05:42 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test07GetAuctionView -->
        <test-method signature="test08GetAuctionsUpcoming()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:42 IST" name="test08GetAuctionsUpcoming" finished-at="2025-01-21T17:05:42 IST" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test08GetAuctionsUpcoming -->
        <test-method signature="test09GetAuctionsUpcomingJewellery()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:42 IST" name="test09GetAuctionsUpcomingJewellery" finished-at="2025-01-21T17:05:42 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test09GetAuctionsUpcomingJewellery -->
        <test-method signature="test10GetAuctionsUpcomingDiamond()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:42 IST" name="test10GetAuctionsUpcomingDiamond" finished-at="2025-01-21T17:05:42 IST" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test10GetAuctionsUpcomingDiamond -->
        <test-method signature="test11GetAuctionsJewellery()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:42 IST" name="test11GetAuctionsJewellery" finished-at="2025-01-21T17:05:42 IST" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test11GetAuctionsJewellery -->
        <test-method signature="test12GetAuctionsInactive()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:42 IST" name="test12GetAuctionsInactive" finished-at="2025-01-21T17:05:42 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test12GetAuctionsInactive -->
        <test-method signature="test13GetAuctionsFinishedJewellery()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:42 IST" name="test13GetAuctionsFinishedJewellery" finished-at="2025-01-21T17:05:42 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test13GetAuctionsFinishedJewellery -->
        <test-method signature="test14GetSAuctionFinishedDiamond()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:42 IST" name="test14GetSAuctionFinishedDiamond" finished-at="2025-01-21T17:05:42 IST" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test14GetSAuctionFinishedDiamond -->
        <test-method signature="test15GetAuctionsFinishedAndEndDiamond()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:42 IST" name="test15GetAuctionsFinishedAndEndDiamond" finished-at="2025-01-21T17:05:42 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test15GetAuctionsFinishedAndEndDiamond -->
        <test-method signature="test16GetAuctionsEvents()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:42 IST" name="test16GetAuctionsEvents" finished-at="2025-01-21T17:05:42 IST" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test16GetAuctionsEvents -->
        <test-method signature="test17GetAuctionsDiamond()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:42 IST" name="test17GetAuctionsDiamond" finished-at="2025-01-21T17:05:42 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test17GetAuctionsDiamond -->
        <test-method signature="test18GetAuctionByActive()[pri:0, instance:admin.AuctionController@4d1c00d0]" started-at="2025-01-21T17:05:42 IST" name="test18GetAuctionByActive" finished-at="2025-01-21T17:05:42 IST" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test18GetAuctionByActive -->
      </class> <!-- admin.AuctionController -->
      <class name="admin.LotDiamondExcelController">
        <test-method signature="loginToSystem()[pri:0, instance:admin.LotDiamondExcelController@5dda768f]" started-at="2025-01-21T17:05:49 IST" name="loginToSystem" finished-at="2025-01-21T17:05:50 IST" duration-ms="167" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK, but got: 500 expected [200] but found [500]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK, but got: 500 expected [200] but found [500]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at admin.LotDiamondExcelController.loginToSystem(LotDiamondExcelController.java:74)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToSystem -->
      </class> <!-- admin.LotDiamondExcelController -->
      <class name="admin.BidderSupplierSummaryController">
        <test-method signature="test01GetSupplierSummary()[pri:0, instance:admin.BidderSupplierSummaryController@4e08711f]" started-at="2025-01-21T17:05:42 IST" name="test01GetSupplierSummary" finished-at="2025-01-21T17:05:42 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01GetSupplierSummary -->
        <test-method signature="test02GetDetailedSupplierSummary()[pri:0, instance:admin.BidderSupplierSummaryController@4e08711f]" started-at="2025-01-21T17:05:42 IST" name="test02GetDetailedSupplierSummary" finished-at="2025-01-21T17:05:42 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02GetDetailedSupplierSummary -->
        <test-method signature="test03GetDetailedBidderSummary()[pri:0, instance:admin.BidderSupplierSummaryController@4e08711f]" started-at="2025-01-21T17:05:42 IST" name="test03GetDetailedBidderSummary" finished-at="2025-01-21T17:05:43 IST" duration-ms="45" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Request failed due to token expiration.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Request failed due to token expiration.
at org.testng.Assert.fail(Assert.java:99)
at admin.BidderSupplierSummaryController.test03GetDetailedBidderSummary(BidderSupplierSummaryController.java:169)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03GetDetailedBidderSummary -->
        <test-method signature="test04GetBiddersSummary()[pri:0, instance:admin.BidderSupplierSummaryController@4e08711f]" started-at="2025-01-21T17:05:43 IST" name="test04GetBiddersSummary" finished-at="2025-01-21T17:05:44 IST" duration-ms="1925" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04GetBiddersSummary -->
      </class> <!-- admin.BidderSupplierSummaryController -->
      <class name="admin.CompanyController">
        <test-method signature="test01PutCompnayId()[pri:0, instance:admin.CompanyController@bcec361]" started-at="2025-01-21T17:05:44 IST" name="test01PutCompnayId" finished-at="2025-01-21T17:05:45 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01PutCompnayId -->
        <test-method signature="test03PostCompany()[pri:0, instance:admin.CompanyController@bcec361]" started-at="2025-01-21T17:05:45 IST" name="test03PostCompany" finished-at="2025-01-21T17:05:45 IST" duration-ms="78" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK or 201 Created, but got: 500 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK or 201 Created, but got: 500 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.CompanyController.test03PostCompany(CompanyController.java:173)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03PostCompany -->
        <test-method signature="tset02GetCompnay()[pri:0, instance:admin.CompanyController@bcec361]" started-at="2025-01-21T17:05:45 IST" name="tset02GetCompnay" finished-at="2025-01-21T17:05:45 IST" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tset02GetCompnay -->
      </class> <!-- admin.CompanyController -->
      <class name="admin.GSBController">
        <test-method signature="loginToSystem()[pri:0, instance:admin.GSBController@49438269]" started-at="2025-01-21T17:05:48 IST" name="loginToSystem" finished-at="2025-01-21T17:05:48 IST" duration-ms="46" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Request failed due to token expiration.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Request failed due to token expiration.
at org.testng.Assert.fail(Assert.java:99)
at admin.GSBController.loginToSystem(GSBController.java:43)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToSystem -->
      </class> <!-- admin.GSBController -->
      <class name="admin.ShapeController">
        <test-method signature="testcreateSymmetry01()[pri:0, instance:admin.ShapeController@7817fd62]" started-at="2025-01-21T17:06:05 IST" name="testcreateSymmetry01" finished-at="2025-01-21T17:06:05 IST" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcreateSymmetry01 -->
        <test-method signature="testcreateSymmetry02()[pri:0, instance:admin.ShapeController@7817fd62]" started-at="2025-01-21T17:06:05 IST" name="testcreateSymmetry02" finished-at="2025-01-21T17:06:05 IST" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcreateSymmetry02 -->
        <test-method signature="testcreateSymmetry03()[pri:0, instance:admin.ShapeController@7817fd62]" started-at="2025-01-21T17:06:05 IST" name="testcreateSymmetry03" finished-at="2025-01-21T17:06:05 IST" duration-ms="82" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcreateSymmetry03 -->
        <test-method signature="testcreateSymmetry04()[pri:0, instance:admin.ShapeController@7817fd62]" started-at="2025-01-21T17:06:05 IST" name="testcreateSymmetry04" finished-at="2025-01-21T17:06:05 IST" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcreateSymmetry04 -->
      </class> <!-- admin.ShapeController -->
      <class name="admin.LotDiamondBidController">
        <test-method signature="test01LotDiamondNegotiation()[pri:0, instance:admin.LotDiamondBidController@1ce24091]" started-at="2025-01-21T17:05:49 IST" name="test01LotDiamondNegotiation" finished-at="2025-01-21T17:05:49 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01LotDiamondNegotiation -->
        <test-method signature="test02LotDiamondSearch()[pri:0, instance:admin.LotDiamondBidController@1ce24091]" started-at="2025-01-21T17:05:49 IST" name="test02LotDiamondSearch" finished-at="2025-01-21T17:05:49 IST" duration-ms="95" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02LotDiamondSearch -->
        <test-method signature="test03LotDiamondSearchPage()[pri:0, instance:admin.LotDiamondBidController@1ce24091]" started-at="2025-01-21T17:05:49 IST" name="test03LotDiamondSearchPage" finished-at="2025-01-21T17:05:49 IST" duration-ms="89" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03LotDiamondSearchPage -->
        <test-method signature="test04LotDiamondRemark()[pri:0, instance:admin.LotDiamondBidController@1ce24091]" started-at="2025-01-21T17:05:49 IST" name="test04LotDiamondRemark" finished-at="2025-01-21T17:05:49 IST" duration-ms="14" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: auctionId=3fa85f64-5717-4562-b3fc-2c963f66afa6.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: auctionId=3fa85f64-5717-4562-b3fc-2c963f66afa6.
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1277)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1161)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:172)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
at admin.LotDiamondBidController.test04LotDiamondRemark(LotDiamondBidController.java:286)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04LotDiamondRemark -->
        <test-method signature="test05LotDiamondLotId()[pri:0, instance:admin.LotDiamondBidController@1ce24091]" started-at="2025-01-21T17:05:49 IST" name="test05LotDiamondLotId" finished-at="2025-01-21T17:05:49 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test05LotDiamondLotId -->
        <test-method signature="test06LotDiamondLiveBids()[pri:0, instance:admin.LotDiamondBidController@1ce24091]" started-at="2025-01-21T17:05:49 IST" name="test06LotDiamondLiveBids" finished-at="2025-01-21T17:05:49 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test06LotDiamondLiveBids -->
        <test-method signature="test07LotDiamondFavourites()[pri:0, instance:admin.LotDiamondBidController@1ce24091]" started-at="2025-01-21T17:05:49 IST" name="test07LotDiamondFavourites" finished-at="2025-01-21T17:05:49 IST" duration-ms="29" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK, but got: 500 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK, but got: 500 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.LotDiamondBidController.test07LotDiamondFavourites(LotDiamondBidController.java:464)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test07LotDiamondFavourites -->
        <test-method signature="test08LotDiamondGetWinBids()[pri:0, instance:admin.LotDiamondBidController@1ce24091]" started-at="2025-01-21T17:05:49 IST" name="test08LotDiamondGetWinBids" finished-at="2025-01-21T17:05:49 IST" duration-ms="32" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK, but got: 500 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK, but got: 500 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.LotDiamondBidController.test08LotDiamondGetWinBids(LotDiamondBidController.java:508)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test08LotDiamondGetWinBids -->
        <test-method signature="test09LotDiamondGetMyStockData()[pri:0, instance:admin.LotDiamondBidController@1ce24091]" started-at="2025-01-21T17:05:49 IST" name="test09LotDiamondGetMyStockData" finished-at="2025-01-21T17:05:49 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test09LotDiamondGetMyStockData -->
        <test-method signature="test10GetMyBidStatusData()[pri:0, instance:admin.LotDiamondBidController@1ce24091]" started-at="2025-01-21T17:05:49 IST" name="test10GetMyBidStatusData" finished-at="2025-01-21T17:05:49 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test10GetMyBidStatusData -->
        <test-method signature="test11GetMyBids()[pri:0, instance:admin.LotDiamondBidController@1ce24091]" started-at="2025-01-21T17:05:49 IST" name="test11GetMyBids" finished-at="2025-01-21T17:05:49 IST" duration-ms="27" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK, but got: 500 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK, but got: 500 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.LotDiamondBidController.test11GetMyBids(LotDiamondBidController.java:662)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test11GetMyBids -->
        <test-method signature="test12GetLoseBids()[pri:0, instance:admin.LotDiamondBidController@1ce24091]" started-at="2025-01-21T17:05:49 IST" name="test12GetLoseBids" finished-at="2025-01-21T17:05:49 IST" duration-ms="29" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK, but got: 500 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK, but got: 500 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.LotDiamondBidController.test12GetLoseBids(LotDiamondBidController.java:708)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test12GetLoseBids -->
      </class> <!-- admin.LotDiamondBidController -->
      <class name="admin.InvoiceListController">
        <test-method signature="test01GetPastInvoiceList()[pri:0, instance:admin.InvoiceListController@1c1bbc4e]" started-at="2025-01-21T17:05:48 IST" name="test01GetPastInvoiceList" finished-at="2025-01-21T17:05:48 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01GetPastInvoiceList -->
        <test-method signature="test02GetInvoiceList()[pri:0, instance:admin.InvoiceListController@1c1bbc4e]" started-at="2025-01-21T17:05:48 IST" name="test02GetInvoiceList" finished-at="2025-01-21T17:05:49 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02GetInvoiceList -->
        <test-method signature="test03GetHoldInvoiceList()[pri:0, instance:admin.InvoiceListController@1c1bbc4e]" started-at="2025-01-21T17:05:49 IST" name="test03GetHoldInvoiceList" finished-at="2025-01-21T17:05:49 IST" duration-ms="79" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03GetHoldInvoiceList -->
      </class> <!-- admin.InvoiceListController -->
      <class name="admin.LotController">
        <test-method signature="test01LotidAmount()[pri:0, instance:admin.LotController@2925bf5b]" started-at="2025-01-21T17:05:55 IST" name="test01LotidAmount" finished-at="2025-01-21T17:05:55 IST" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01LotidAmount -->
        <test-method signature="test06DownloadLotExcel()[pri:0, instance:admin.LotController@2925bf5b]" started-at="2025-01-21T17:05:55 IST" name="test06DownloadLotExcel" finished-at="2025-01-21T17:05:55 IST" duration-ms="25" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Request failed due to token expiration.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Request failed due to token expiration.
at org.testng.Assert.fail(Assert.java:99)
at admin.LotController.test06DownloadLotExcel(LotController.java:99)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test06DownloadLotExcel -->
        <test-method signature="test07BiddersPdf()[pri:0, instance:admin.LotController@2925bf5b]" started-at="2025-01-21T17:05:55 IST" name="test07BiddersPdf" finished-at="2025-01-21T17:05:55 IST" duration-ms="91" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Internal Server Error occurred.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Internal Server Error occurred.
at org.testng.Assert.fail(Assert.java:99)
at admin.LotController.test07BiddersPdf(LotController.java:160)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test07BiddersPdf -->
      </class> <!-- admin.LotController -->
      <class name="admin.ReservationController">
        <test-method signature="Test01PostSlotTransaction()[pri:0, instance:admin.ReservationController@510f3d34]" started-at="2025-01-21T17:06:04 IST" name="Test01PostSlotTransaction" finished-at="2025-01-21T17:06:04 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.Error">
            <message>
              <![CDATA[Unresolved compilation problems: 
Type mismatch: cannot convert from String[] to String
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on tokens, delete these tokens
Syntax error on token ":", , expected
The type of the expression must be an array type but it resolved to String
Syntax error on tokens, delete these tokens
Type mismatch: cannot convert from String to int
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error, insert ";" to complete LocalVariableDeclarationStatement
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Error: Unresolved compilation problems: 
Type mismatch: cannot convert from String[] to String
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on tokens, delete these tokens
Syntax error on token ":", , expected
The type of the expression must be an array type but it resolved to String
Syntax error on tokens, delete these tokens
Type mismatch: cannot convert from String to int
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error on token ":", , expected
Syntax error, insert ";" to complete LocalVariableDeclarationStatement

at admin.ReservationController.Test01PostSlotTransaction(ReservationController.java:32)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Error -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test01PostSlotTransaction -->
        <test-method signature="Test02GetSlots()[pri:0, instance:admin.ReservationController@510f3d34]" started-at="2025-01-21T17:06:04 IST" name="Test02GetSlots" finished-at="2025-01-21T17:06:05 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test02GetSlots -->
      </class> <!-- admin.ReservationController -->
      <class name="admin.CutController">
        <test-method signature="test01PutCutId()[pri:0, instance:admin.CutController@302552ec]" started-at="2025-01-21T17:05:45 IST" name="test01PutCutId" finished-at="2025-01-21T17:05:45 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01PutCutId -->
        <test-method signature="test02PostCut()[pri:0, instance:admin.CutController@302552ec]" started-at="2025-01-21T17:05:45 IST" name="test02PostCut" finished-at="2025-01-21T17:05:45 IST" duration-ms="33" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 200 OK or 201 Created, but got: 409 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 200 OK or 201 Created, but got: 409 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at admin.CutController.test02PostCut(CutController.java:131)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02PostCut -->
        <test-method signature="test03PostCutExcel()[pri:0, instance:admin.CutController@302552ec]" started-at="2025-01-21T17:05:45 IST" name="test03PostCutExcel" finished-at="2025-01-21T17:05:46 IST" duration-ms="960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03PostCutExcel -->
        <test-method signature="test04GetCuts()[pri:0, instance:admin.CutController@302552ec]" started-at="2025-01-21T17:05:46 IST" name="test04GetCuts" finished-at="2025-01-21T17:05:46 IST" duration-ms="157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04GetCuts -->
      </class> <!-- admin.CutController -->
    </test> <!-- admin -->
  </suite> <!-- Suite -->
</testng-results>
